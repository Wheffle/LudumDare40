<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_drone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;

thrust_force = 40;
thrust_angle = 0;
thrusting = false;

hp_max = 100;
hp = hp_max;
firepower = 1;
firespeed = 5;

fire_timer_set = 30;
fire_timer = 0;

cargo = noone;
cargo_timer_set = room_speed;
cargo_timer = 0;

mining_timer = 0;

phy_fixed_rotation = true;
drone_mass = phy_mass;

half_width = sprite_width div 2;
half_height = sprite_height div 2;

flame_image = s_flame;
flame_image_index = 0;
flame_image_speed = 0.50;
flame_image_number = sprite_get_number(s_flame);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item_drop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

if (cargo != noone)
{
    if (mining_timer &lt;= 0)
    {
        cargo.x = x;
        cargo.y = y+14;
    }
    
    if (position_meeting(cargo.x, cargo.y, obj_dropship))
    {
        item_get();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

// Player input
thrusting = false;
if (mining_timer &gt; 0)
{
    if (cargo and mining_timer % 15 == 0)
    {
        var vfx = vfx_create_moon(cargo.x, cargo.y, 0.75, 0.25, 90, 30, 0.45, 0.05, c_maroon);
        vfx.image_speed = 0.25;
    }

    mining_timer--;
    if (mining_timer &lt;= 0)
    {
        with(cargo) mined = true;
        phy_active = true;
    }
}
else
{
    var move_right = keyboard_check(vk_right) or keyboard_check(ord('D'));
    var move_left = keyboard_check(vk_left) or keyboard_check(ord('A'));
    var move_up = keyboard_check(vk_up) or keyboard_check(ord('W'));
    var move_down = keyboard_check(vk_down) or keyboard_check(ord('S'));
    
    var mx = 0;
    var my = 0;
    
    if (move_right) mx += 1;
    if (move_left) mx -= 1;
    if (move_up) my -= 1;
    if (move_down) my += 1;
    
    if (mx != 0 or my != 0)
    {
        thrust_angle = point_direction(0, 0, mx, my);
        var fx = lengthdir_x(thrust_force, thrust_angle);
        var fy = lengthdir_y(thrust_force, thrust_angle);
        
        physics_apply_local_force(0, 0, fx, fy);
        
        // Flame image
        thrusting = true;
        flame_image_index = (flame_image_index + flame_image_speed) % flame_image_number;
    }
}

// Cargo Pickup
if (cargo_timer &gt; 0)
{
    cargo_timer--;
}
else if (cargo == noone)
{
    var item = instance_position(x, y+7, parent_item);
    if (item)
    {
        item_pickup(item);
    }
}

// Weapon fire timer
if (fire_timer &gt; 0) fire_timer--;

// Outside Room
if (phy_position_x &lt; 0)
{
    phy_position_x = 0;
    phy_speed_x = 0;
}
else if (phy_position_x &gt;= room_width-1)
{
    phy_position_x = room_width-2;
    phy_speed_x = 0;
}

if (phy_position_y &lt; 0)
{
    phy_position_y = 0;
    phy_speed_y = 0;
}
else if (phy_position_y &gt;= room_height-1)
{
    phy_position_y = room_height-2;
    phy_speed_y = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

item_drop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

if (fire_timer &lt;= 0)
{
    fire_timer = fire_timer_set;
    var dir = point_direction(x, y, mouse_x, mouse_y);
    fire_bullet(dir, firespeed, firepower);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (thrusting)
{
    var flame_angle = angle_add(thrust_angle, 180);
    var xx = x + lengthdir_x(half_width, flame_angle);
    var yy = y + lengthdir_y(half_width, flame_angle);
    draw_sprite_ext(flame_image, flame_image_index, xx, yy, 1, 1, flame_angle, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>7.5,7.5</point>
    <point>6,12</point>
  </PhysicsShapePoints>
</object>
